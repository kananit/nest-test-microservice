services:
  db:
    image: postgres:15
    container_name: nest-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB}
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB}']
      interval: 10s
      retries: 5
    networks:
      - docker_default

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: nest-app
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - '3000:3000'
    environment:
      PORT: 3000
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_PASSWORD}
      PGHOST: db
      PGDATABASE: ${DB}
      PGPORT: 5432

      # MinIO
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: 'false'
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_URI: http://minio:9000

      # RabbitMQ
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_URI: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:${RABBITMQ_PORT}
    networks:
      - docker_default

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    networks:
      - docker_default

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmq-diagnostics -q ping']
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - docker_default

volumes:
  db_data:

networks:
  docker_default:
    external: true
